#规范及约定:
vo,dto规范:
	 1.所有需要显示的字段，加注解和说明
	 2.所有字段定义为public
	 3.允许继承
	 4.允许循环引用，但是生成文档时循环引用是个问题,这里序列化为:$ref
	 
服务接口规范
接口定义，尽量简洁把!
 * 1.interface
 * 2.不允许继承，对外提供的api,继承说不过去
 * 3.方法public
 * 4.输出输出参数支持类型:
 *    4.1基本类型,String,list<基本类型/string/bean>,自定义bean
 *    4.2自定义bean属性允许:list/bean/string/基本类型/自定义bean
 *    4.3不允许直接返回基本类型，请用vo包装
 *    原则上允许任何类型，但是如其他set,map就不生成文档了
 * 5.所有参数必须加注解
 * [一期不考虑]
 * 6.特殊情况:自动注入无法完成的，可以注入body
 * 7.了解上下文的能力:注入cookie,header等,定制响应:类型，跨域等等
 *   
 * 问题:
 *    1.返回值基本类型无法加说明?
 *    2.参数写类型比较婆烦
 *    3.后续扩展考虑
 
 #规范逻辑
 api-公共接口定义
    vo,po,dto,to,interface等等公共的
 biz-商业逻辑(ApiImpl-service-dao)
 web-方便部署
 
 #服务注册分析
 1.内存注册:管理简单，每次启动时加载(适合初期尝试版本，当应用jar很多的时候，每次重启去解析，加载会很费事，注册信息不共享，不方便统一管理)
 2.zk注册(可动态发现，耦合小，扩展容易，但是实现麻烦，并且引入了第三方环节，并且只需要注册一份，多节点还得选主等等，注册信息科共享)
 3.数据库注册，方便管理和统计等(比较折中的，每次重启时，可校对md5,发现有修改的重新加载，并且可以延迟初始化，注册信息也可以共享)
 